/*noinspection CssUnresolvedCustomProperty*/
.slider__wrapper {
    display: inline-flex;
    vertical-align: middle;
    --_active-track-color: var(--slider-active-track-color, var(--sys-primary));
    --_active-track-height: var(--slider-active-track-height, 4px);
    --_active-track-shape: var(--slider-active-track-shape, 9999px);
    --_disabled-active-track-color: var(--slider-disabled-active-track-color, var(--sys-on-surface));
    --_disabled-active-track-opacity: var(--slider-disabled-active-track-opacity, 0.38);
    --_disabled-handle-color: var(--slider-disabled-handle-color, var(--sys-on-surface));
    --_disabled-handle-elevation: var(--slider-disabled-handle-elevation, 0);
    --_disabled-inactive-track-color: var(--slider-disabled-inactive-track-color, var(--sys-on-surface));
    --_disabled-inactive-track-opacity: var(--slider-disabled-inactive-track-opacity, 0.12);
    --_focus-handle-color: var(--slider-focus-handle-color, var(--sys-primary));
    --_handle-color: var(--slider-handle-color, var(--sys-primary));
    --_handle-elevation: var(--slider-handle-elevation, 1);
    --_handle-height: var(--slider-handle-height, 20px);
    --_handle-shadow-color: var(--slider-handle-shadow-color, var(--sys-shadow));
    --_handle-shape: var(--slider-handle-shape, 9999px);
    --_handle-width: var(--slider-handle-width, 20px);
    --_hover-handle-color: var(--slider-hover-handle-color, var(--sys-primary));
    --_hover-state-layer-color: var(--slider-hover-state-layer-color), var(--sys-primary);
    --_hover-state-layer-opacity: var(--slider-hover-state-layer-opacity, 0.08);
    --_inactive-track-color: var(--slider-inactive-track-color, var(--sys-surface-container-highest));
    --_inactive-track-height: var(--slider-inactive-track-height, 4px);
    --_inactive-track-shape: var(--slider-inactive-track-shape, 9999px);
    --_label-container-color: var(--slider-label-container-color, var(--sys-primary));
    --_label-container-height: var(--slider-label-container-height, 28px);
    --_label-label-text-color: var(--slider-label-label-text-color, var(--sys-on-primary));
    --_label-label-text-type: var(--sys-label-medium--font-weight) var(--sys-label-medium--font-size) var(--sys-font-family);
    --_pressed-handle-color: var(--slider-pressed-handle-color, var(--sys-primary));
    --_pressed-state-layer-color: var(--slider-pressed-state-layer-color), var(--sys-primary);
    --_pressed-state-layer-opacity: var(--slider-pressed-state-layer-opacity, 0.12);
    --_state-layer-size: var(--slider-state-layer-size, 40px);
    --_with-overlap-handle-outline-color: var(--slider-with-overlap-handle-outline-color, var(--sys-on-primary));
    --_with-overlap-handle-outline-width: var(--slider-with-overlap-handle-outline-width, 1px);
    --_with-tick-marks-active-container-color: var(--slider-with-tick-marks-active-container-color, var(--sys-on-primary));
    --_with-tick-marks-container-size: var(--slider-with-tick-marks-container-size, 2px);
    --_with-tick-marks-disabled-container-color: var(--slider-with-tick-marks-disabled-container-color, var(--sys-on-surface));
    --_with-tick-marks-inactive-container-color: var(--slider-with-tick-marks-inactive-container-color, var(--sys-on-surface-variant));

    --elevation-level: var(--_handle-elevation);
    --elevation-shadow-color: var(--_handle-shadow-color);
    --focus-ring-outward-offset: -2px;
    --focus-ring-shape: 9999px;

    min-inline-size: 200px;
}

.slider__wrapper .base-elevation {
    transition-duration: 250ms;
}

@media (prefers-reduced-motion) {
    .slider__wrapper .label {
        transition-duration: 0ms;
    }
}

.slider__wrapper .disabled {
    opacity: var(--_disabled-active-track-opacity);
    --elevation-level: var(--_disabled-handle-elevation);
}

.container {
    flex: 1;
    display: flex;
    align-items: center;
    position: relative;
    block-size: var(--_state-layer-size);
    pointer-events: none;
    touch-action: none;
}

.track {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
}

.track::before,
.track::after {
    position: absolute;
    content: "";
    inset-inline-start: calc(var(--_state-layer-size) / 2 - var(--_with-tick-marks-container-size));
    inset-inline-end: calc(var(--_state-layer-size) / 2 - var(--_with-tick-marks-container-size));
    /*noinspection CssUnresolvedCustomProperty*/
    background-size: calc((100% - var(--_with-tick-marks-container-size) * 2) / var(--slider-tick-count)) 100%
}

.track::before {
    block-size: var(--_inactive-track-height);
    border-radius: var(--_inactive-track-shape);
    background-color: var(--_inactive-track-color);
}

.track.tickmarks::before {
    background-image: radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-inactive-container-color) 0, var(--_with-tick-marks-inactive-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2));
}

.slider__wrapper.disabled .track::before {
    opacity: calc(1 / var(--_disabled-active-track-opacity) * var(--_disabled-inactive-track-opacity));
    background-color: var(--_disabled-inactive-track-color);
}

.track::after {
    block-size: var(--_active-track-height);
    border-radius: var(--_active-track-shape);
    /*noinspection CssUnresolvedCustomProperty*/
    clip-path: inset(0 calc(var(--_with-tick-marks-container-size) * min((1 - var(--slider-end-fraction)) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * (1 - var(--slider-end-fraction))) 0 calc(var(--_with-tick-marks-container-size) * min(var(--slider-start-fraction) * 1000000000, 1) + (100% - var(--_with-tick-marks-container-size) * 2) * var(--slider-start-fraction)));
    background-color: var(--_active-track-color)
}

.track.tickmarks::after {
    background-image: radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-active-container-color) 0, var(--_with-tick-marks-active-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2))
}

.slider__wrapper.disabled .track::after {
    background-color: var(--_disabled-active-track-color);
}

.slider__wrapper.disabled .track::before,
.slider__wrapper.disabled .track::after {
    background-image: radial-gradient(circle at var(--_with-tick-marks-container-size) center, var(--_with-tick-marks-disabled-container-color) 0, var(--_with-tick-marks-disabled-container-color) calc(var(--_with-tick-marks-container-size) / 2), transparent calc(var(--_with-tick-marks-container-size) / 2));
}

.handleContainerPadded {
    position: relative;
    block-size: 100%;
    inline-size: 100%;
    padding-inline: calc(var(--_state-layer-size) / 2);
}

.handleContainerBlock {
    position: relative;
    block-size: 100%;
    inline-size: 100%;
}

.handleContainer {
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    /*noinspection CssUnresolvedCustomProperty*/
    inset-inline-start: calc(100% * var(--slider-start-fraction));
    /*noinspection CssUnresolvedCustomProperty*/
    inline-size: calc(100% * (var(--slider-end-fraction) - var(--slider-start-fraction)));
}

.handle {
    position: absolute;
    block-size: var(--_state-layer-size);
    inline-size: var(--_state-layer-size);
    border-radius: var(--_handle-shape);
    display: grid;
    place-items: center;
}

.handleNub {
    position: absolute;
    height: var(--_handle-height);
    width: var(--_handle-width);
    border-radius: var(--_handle-shape);
    background: var(--_handle-color);
}

.slider__wrapper.disabled .handleNub {
    background: var(--_disabled-handle-color);
}

input.end:focus ~ .handleContainerPadded .handle.end > .handleNub,
input.start:focus ~ .handleContainerPadded .handle.start > .handleNub {
    background: var(--_focus-handle-color)
}

.container > .handleContainerPadded .handle.hover > .handleNub {
    background: var(--_hover-handle-color);
}

.slider__wrapper:not(.disabled) input.end:active ~ .handleContainerPadded .handle.end > .handleNub,
.slider__wrapper:not(.disabled) input.start:active ~ .handleContainerPadded .handle.start > .handleNub {
    background: var(--_pressed-handle-color);
}

.slider__wrapper .onTop.isOverlapping .handleNub,
.slider__wrapper .onTop.isOverlapping .label,
.slider__wrapper .onTop.isOverlapping .label::before {
    border: var(--_with-overlap-handle-outline-color) solid var(--_with-overlap-handle-outline-width);
}

.handle.start {
    inset-inline-start: calc(0px - var(--_state-layer-size) / 2)
}

.handle.end {
    inset-inline-end: calc(0px - var(--_state-layer-size) / 2)
}

.label {
    position: absolute;
    box-sizing: border-box;
    display: grid;
    padding: 4px;
    place-items: center;
    border-radius: 9999px;
    color: var(--_label-label-text-color);
    font: var(--_label-label-text-type);
    inset-block-end: 100%;
    min-inline-size: var(--_label-container-height);
    min-block-size: var(--_label-container-height);
    background: var(--_label-container-color);
    transition: transform 100ms cubic-bezier(0.2, 0, 0, 1);
    transform-origin: center bottom;
    transform: scale(0);
}

.slider__wrapper:focus-within .label,
.handleContainer.hover .label,
.slider__wrapper :where(:has(input:active)) .label {
    transform: scale(1);
}

.slider__wrapper .label::before,
.slider__wrapper .label::after {
    position: absolute;
    display: block;
    content: "";
    background: inherit;
}

.slider__wrapper .label::before {
    inline-size: calc(var(--_label-container-height) / 2);
    block-size: calc(var(--_label-container-height) / 2);
    bottom: calc(var(--_label-container-height) / -10);
    transform: rotate(45deg);
}

.slider__wrapper .label::after {
    inset: 0;
    border-radius: inherit;
}

.slider__wrapper .labelContent {
    z-index: 1;
}

.slider__wrapper input[type=range] {
    opacity: 0;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    position: absolute;
    box-sizing: border-box;
    height: 100%;
    width: 100%;
    margin: 0;
    background: rgba(0, 0, 0, 0);
    cursor: pointer;
    pointer-events: auto;
    appearance: none;
}

.slider__wrapper input[type=range]:focus {
    outline: none;
}

::-webkit-slider-runnable-track {
    -webkit-appearance: none;
}

::-moz-range-track {
    appearance: none;
}

::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    block-size: var(--_state-layer-size);
    inline-size: var(--_state-layer-size);
    transform: scaleX(0);
    opacity: 0;
    z-index: 2;
}

::-moz-range-thumb {
    appearance: none;
    block-size: var(--_state-layer-size);
    inline-size: var(--_state-layer-size);
    transform: scaleX(0);
    opacity: 0;
    z-index: 2;
}

.ranged input.start {
    /*noinspection CssUnresolvedCustomProperty*/
    clip-path: inset(0 calc(100% - (var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--slider-start-fraction) + (var(--slider-end-fraction) - var(--slider-start-fraction)) / 2))) 0 0);
}

.ranged input.end {
    /*noinspection CssUnresolvedCustomProperty*/
    clip-path: inset(0 0 0 calc(var(--_state-layer-size) / 2 + (100% - var(--_state-layer-size)) * (var(--slider-start-fraction) + (var(--slider-end-fraction) - var(--slider-start-fraction)) / 2)));
}

.slider__wrapper .onTop {
    z-index: 1;
}

.handle {
    --ripple-hover-color: var(--_hover-state-layer-color);
    --ripple-hover-opacity: var(--_hover-state-layer-opacity);
    --ripple-pressed-color: var(--_pressed-state-layer-color);
    --ripple-pressed-opacity: var(--_pressed-state-layer-opacity);
}

.slider__wrapper .ripple-shared {
    border-radius: 50%;
    height: var(--_state-layer-size);
    width: var(--_state-layer-size);
}
